- name: Deploy Open WebUI container
  hosts: all
  vars_files:
    - ../vars/ports.yml
    - ../vars/versions.yml
  tasks:
    - name: Create directories
      file:
        path: "/data/openwebui"
        state: directory
        owner: root
        group: root
        mode: '0755'
      become: yes

    - name: Create litellm directory
      file:
        path: "/home/{{ ansible_user }}/{{ item }}"
        state: directory
      loop:
        - "litellm/"
        - "litellm/db"

    - name: Create litellm config file
      file:
        path: "/home/{{ ansible_user }}/litellm/config.yml"
        state: touch
        mode: '0664'

    - name: Create docker networks (home, ai)
      docker_network:
        name: "{{ item }}"
      loop: 
        - "home_net"
        - "ai_net"
    
    - name: Create database container
      docker_container:
        name: litellm_db
        image: arm64v8/postgres:{{ postgres_next_version }}
        networks:
          - name: ai_net
            aliases: litellm_db
        restart_policy: always
        env:
          POSTGRES_DB: litellm
          POSTGRES_USER: litellm
          POSTGRES_PASSWORD: "{{ litellm_db_password }}"
        volumes:
          - "/home/{{ ansible_user }}/litellm/db:/var/lib/postgresql/data"
 
    
    - name: Deploy LiteLLM container
      docker_container:
        name: litellm
        image: ghcr.io/berriai/litellm-non_root:{{ litellm_version }}
        networks:
          - name: ai_net
            aliases: litellm
        restart_policy: always
        ports:
          - "4000:4000"
        env:
          DATABASE_URL: "postgresql://litellm:{{ litellm_db_password }}@litellm_db.ai_net:5432/litellm"
          LITELLM_MASTER_KEY: "{{ litellm_master }}" # sk-1234
          LITELLM_SALT_KEY: "{{ litellm_salt }}" # sk-1234
          STORE_MODEL_IN_DB: "True"
        volumes:
          - "/home/{{ ansible_user }}/litellm/config.yml:/app/config.yml"
 

    - name: Deploy OpenWebUI container
      docker_container:
        name: openwebui
        image: ghcr.io/open-webui/open-webui:{{ openwebui_version }}
        restart_policy: always
        networks:
          - name: home_net
            aliases: openwebui
          - name: ai_net
            aliases: openwebui
        ports:
          - "{{ openwebui_port }}:8080"
        volumes:
          - "/data/openwebui:/app/backend/data"
